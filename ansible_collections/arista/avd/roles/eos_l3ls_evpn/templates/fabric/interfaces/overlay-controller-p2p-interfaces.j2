{# OVERLAY CONTROLLER P2P interfaces for external RS or RR #}
{% if switch.uplink_to_remote_switches is defined %}
{%     for uplink_to_remote_switches in switch.uplink_to_remote_switches %}
  {{ uplink_to_remote_switches }}:
    peer: {{ switch.remote_switches[loop.index0] }}
    peer_interface: {{ switch.remote_switches_interfaces[loop.index0 ] }}
    peer_type: {{ hostvars[switch.remote_switches[loop.index0]].type }}
    description: P2P_LINK_TO_{{ switch.remote_switches[loop.index0] | upper }}_{{ switch.remote_switches_interfaces[loop.index0 ] }}
{%         if switch.p2p_link_interface_speed is defined %}
    speed: {{ switch.p2p_link_interface_speed }}
{%         endif %}
    mtu: {{ p2p_uplinks_mtu }}
{%         if p2p_uplinks_qos_profile is arista.avd.defined %}
    service_profile: {{ p2p_uplinks_qos_profile }}
{%         endif %}
    type: routed
    shutdown: false
    ip_address: {{ overlay_controller_p2p_network_summary | ipaddr('network') | ipmath(((switch.id -1) * 2 * max_overlay_controller_to_switch_links ) + loop.index0 * 2 + 1) }}/31
{%         if underlay_routing_protocol|lower == "ospf" %}
    ospf_network_point_to_point: true
    ospf_area: {{ underlay_ospf_area }}
{%         endif %}
{%         if underlay_routing_protocol|lower == "isis" %}
    isis_enable: EVPN_UNDERLAY
    isis_metric: 50
    isis_network_point_to_point: true
{%         endif %}
{%     endfor %}
{% endif %}