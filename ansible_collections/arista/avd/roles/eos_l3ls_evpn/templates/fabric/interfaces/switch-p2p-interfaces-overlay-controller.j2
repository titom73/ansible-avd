{# Point-to-Point Interfaces to optional OVERLAY_CONTROLLER Switches #}
{% if overlay_controller is defined %}
{%     for overlay_controller_node in overlay_controller.nodes | arista.avd.natural_sort %}
{%         if overlay_controller.nodes[overlay_controller_node].remote_switches is defined %}
{%             set overlay_controller_remote_switches = overlay_controller.nodes[overlay_controller_node].remote_switches %}
{%         else %}
{%             set overlay_controller_remote_switches = overlay_controller.defaults.remote_switches %}
{%         endif %}
{%         for overlay_controller_remote_switch in overlay_controller_remote_switches %}
{%             if overlay_controller_remote_switch == inventory_hostname %}
{%                 set remote_switches_interfaces = overlay_controller.nodes[overlay_controller_node].nodes[node].remote_switches_interfaces %}
{%                 if overlay_controller.nodes[overlay_controller_node].uplink_to_remote_switches is defined %}
{%                     set uplink_to_remote_switches = overlay_controller.nodes[overlay_controller_node].uplink_to_remote_switches %}
{%                 else %}
{%                 set uplink_to_remote_switches = overlay_controller.defaults.uplink_to_remote_switches %}
{%                 endif %}
{%                 if overlay_controller.nodes[overlay_controller_node].p2p_link_interface_speed is defined %}
{%                     set p2p_link_interface_speed = overlay_controller.nodes[overlay_controller_node].p2p_link_interface_speed %}
{%                 elif overlay_controller.defaults.p2p_link_interface_speed is defined %}
{%                     set p2p_link_interface_speed = overlay_controller.defaults.p2p_link_interface_speed %}
{%                 endif %}
{%                 set switch_interfaces = overlay_controller.nodes[overlay_controller_node].remote_switches_interfaces %}
  {{ switch_interfaces[loop.index0] }}:
    peer: {{ overlay_controller_node }}
    peer_interface: {{ uplink_to_remote_switches[loop.index0] }}
    peer_type: overlay_controller
    description: P2P_LINK_TO_{{ overlay_controller_node | upper }}_{{ uplink_to_remote_switches[loop.index0] }}
{%                 if p2p_link_interface_speed is defined %}
    speed: {{ p2p_link_interface_speed }}
{%                 endif %}
    mtu: {{ p2p_uplinks_mtu }}
{%                 if p2p_uplinks_qos_profile is arista.avd.defined %}
    service_profile: {{ p2p_uplinks_qos_profile }}
{%                 endif %}
    type: routed
    shutdown: false
    ip_address: {{ overlay_controller_p2p_network_summary | ipaddr('network') | ipmath(((overlay_controller.nodes[overlay_controller_node].id -1) * 2 * max_overlay_controller_to_switch_links ) + loop.index0 * 2) }}/31
{%                 if underlay_routing_protocol|lower == "ospf" %}
    ospf_network_point_to_point: true
    ospf_area: {{ underlay_ospf_area }}
{%                 endif %}
{%                 if underlay_routing_protocol|lower == "isis" %}
    isis_enable: EVPN_UNDERLAY
    isis_metric: 50
    isis_network_point_to_point: true
{%                 endif %}
{%             endif %}
{%         endfor %}
{%     endfor %}
{% endif %}