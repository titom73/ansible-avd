{# Leaf and Spine route-maps for the underlay#}
{% if switch.underlay_routing_protocol == "ebgp" %}
  RM-CONN-2-BGP:
    sequence_numbers:
      10:
        type: permit
        match:
          - "ip address prefix-list PL-LOOPBACKS-EVPN-OVERLAY"
{%     if type == "l3leaf" and l2leaf_inband_management_subnet is defined and l2leaf_inband_management_subnet is not none %}
      20:
        type: permit
        match:
          - "ip address prefix-list PL-L2LEAF-INBAND-MGMT"
{%     endif %}
{% endif %}
{# Leaf route-maps for the overlay#}
{% if switch.overlay_routing_protocol == "ibgp" %}
{%     if type == "l3leaf" %}
  RM-EVPN-SOO-IN:
    sequence_numbers:
      10:
        type: deny
        match:
          - "extcommunity ECL-EVPN-SOO"
      20:
        type: permit
  RM-EVPN-SOO-OUT:
    sequence_numbers:
      10:
        type: permit
        set:
{%         if leaf.mlag == true and leaf.mlag_role == "primary" %}
          - "extcommunity soo {{ vtep_loopback_network_summary | ipaddr('network') | ipmath(leaf.id + spine.nodes | length) }}:1 additive"
{%         elif leaf.mlag == true and leaf.mlag_role == "secondary" %}
          - "extcommunity soo {{ vtep_loopback_network_summary | ipaddr('network') | ipmath(leaf.mlag_peer_id + spine.nodes | length) }}:1 additive"
{%         else %}
          - "extcommunity soo {{ vtep_loopback_network_summary | ipaddr('network') | ipmath(leaf.id + spine.nodes | length) }}:1 additive"
{%         endif %}
{%     endif %}
{% endif %}
{# Origin Incomplete for MLAG iBGP learned routes #}
{% if type == "l3leaf" %}
{%     if leaf.mlag == true %}
{%         if switch.underlay_routing_protocol == "ebgp" %}
{%             if leaf.mlag_ibgp_origin_incomplete == true %}
  RM-MLAG-PEER-IN:
    sequence_numbers:
      10:
        type: permit
        set:
          - "origin incomplete"
        description: Make routes learned over MLAG Peer-link less preferred on spines to ensure optimal routing
{%             endif %}
{%         endif %}
{%     endif %}
{% endif %}
{# Route-maps for tenant bgp peers set_ipv4_next_hop parameter #}
{% if type == "l3leaf" %}
{%     for tenant in tenants | arista.avd.natural_sort if ( tenant in leaf.filter_tenants or "all" in leaf.filter_tenants ) and leaf.evpn_services_l2_only == false %}
{%         if tenants[tenant].vrfs is defined %}
{%             for vrf in tenants[tenant].vrfs | arista.avd.natural_sort if leaf.vrfs is not none and vrf in leaf.vrfs %}
{%                 if tenants[tenant].vrfs[vrf].bgp_peers is arista.avd.defined %}
{%                     for bgp_peer in tenants[tenant].vrfs[vrf].bgp_peers %}
{%                         if tenants[tenant].vrfs[vrf].bgp_peers[bgp_peer].nodes is arista.avd.defined %}
{%                             if inventory_hostname in tenants[tenant].vrfs[vrf].bgp_peers[bgp_peer].nodes %}
{%                                 if tenants[tenant].vrfs[vrf].bgp_peers[bgp_peer].set_ipv4_next_hop is arista.avd.defined or tenants[tenant].vrfs[vrf].bgp_peers[bgp_peer].set_ipv6_next_hop is arista.avd.defined %}
  RM-{{ vrf }}-{{ bgp_peer }}-SET-NEXT-HOP-OUT:
    sequence_numbers:
      10:
        type: permit
        set:
{%                                     if tenants[tenant].vrfs[vrf].bgp_peers[bgp_peer].set_ipv4_next_hop is arista.avd.defined %}
          - "ip next-hop {{ tenants[tenant].vrfs[vrf].bgp_peers[bgp_peer].set_ipv4_next_hop }}"
{%                                     elif tenants[tenant].vrfs[vrf].bgp_peers[bgp_peer].set_ipv6_next_hop is arista.avd.defined %}
          - "ipv6 next-hop {{ tenants[tenant].vrfs[vrf].bgp_peers[bgp_peer].set_ipv6_next_hop }}"
{%                                     endif %}
{%                                 endif %}
{%                             endif %}
{%                         endif %}
{%                     endfor %}
{%                 endif %}
{%             endfor %}
{%         endif %}
{%     endfor %}
{% endif %}
